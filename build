#!/usr/bin/env python3

import argparse
import json
import os
import subprocess
from pathlib import Path
from shutil import which


def sudo(cmd):
    cmd = ["sudo"] + cmd
    print(" ".join(cmd))
    subprocess.run(cmd)


def write_config(qmk_dir):
    # write config to file
    with open("config.json", "w") as fp:
        json.dump({"qmk_dir": str(qmk_dir)}, fp)
    return qmk_dir


# locate qmk directory
def get_qmk_dir():
    # qmk dir is sister of this directory
    try:
        return write_config(Path("../qmk_firmware").resolve(strict=True))
    except FileNotFoundError:
        user_dir = input("Path of qmk_firmware directory: ")
        try:
            return write_config(Path(user_dir).resolve(strict=True))
        except FileNotFoundError:
            print("Invalid qmk directory provided!")
            raise SystemExit


class Keyboard:
    def __init__(self, name, *, path=None, keymap_path=None):
        self.name = name
        self.path = path or name
        self.keymap_path = self.path if keymap_path is None else keymap_path


# keyboard path defaults to keyboard name
KEYBOARDS = {
    "ergodox": Keyboard("ergodox", path="ergodox_ez"),
    "plaid": Keyboard("plaid"),
    "boardwalk": Keyboard("boardwalk"),
    "alice": Keyboard(
        "alice",
        path="projectkb/alice/rev2",
        keymap_path="projectkb/alice",
    ),
    "corne": Keyboard("corne", path="crkbd"),
    "sat75": Keyboard(
        "satisfaction75",
        path="cannonkeys/satisfaction75",
    ),
    "canoe": Keyboard(
        "canoe",
        path="percent/canoe_gen2",
    ),
}


def build_keyboard(qmk_dir, keyboard, flash=False):
    kb = KEYBOARDS[keyboard]
    keyboard_path = kb.path

    # TODO: insert preamble for plaid
    # Plug in USB cable
    # Push and hold RESET
    # Push and hold BOOT
    # Release RESET
    # Release BOOT

    keymap_path = qmk_dir / "keyboards" / kb.keymap_path / "keymaps/iynaix"
    # create keymaps symlink if it doesnt exist
    if keymap_path.exists():
        keymap_path.unlink()
    keymap_path.symlink_to(Path(f"./{keyboard}").resolve())

    current_dir = os.getcwd()
    os.chdir(qmk_dir)

    # subprocess.run(["git", "pull", "origin", "master"])
    sudo(["make", "clean"])
    sudo(["make", f"{keyboard_path}:iynaix:flash"])
    os.chdir(current_dir)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Build and / or flashes qmk firmware.")
    parser.add_argument("keyboard", choices=KEYBOARDS.keys())
    args = parser.parse_args()

    # read config from file
    qmk_dir = None
    try:
        with open("config.json") as fp:
            qmk_dir = json.load(fp)["qmk_dir"]
    except FileNotFoundError:
        qmk_dir = get_qmk_dir()

    build_keyboard(Path(qmk_dir), args.keyboard)
